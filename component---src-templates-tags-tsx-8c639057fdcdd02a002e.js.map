{"version":3,"file":"component---src-templates-tags-tsx-8c639057fdcdd02a002e.js","mappings":"uKAuDA,UAxBoBA,IAA6C,IAA5C,YAAEC,EAAW,KAAEC,GAAwBF,EAC1D,MAAM,IAAEG,GAAQF,GACV,MAAEG,EAAK,WAAEC,GAAeH,EAAKI,kBAC7BC,EAAeF,EAAU,SAAuB,IAAfA,EAAmB,GAAK,KAAG,iBAAiBF,EAAG,IAEtF,OACEK,EAAAA,cAACC,EAAAA,GAAM,CAACC,MAAK,iBAAmBP,EAAG,KACjCK,EAAAA,cAAA,OAAKG,UAAU,aACbH,EAAAA,cAAA,OAAKG,UAAU,WAAWC,GAAG,QAC3BJ,EAAAA,cAAA,OAAKG,UAAU,OACbH,EAAAA,cAAA,UAAKD,GACLC,EAAAA,cAACK,EAAAA,GAAQ,CAACC,GAAG,SAAQ,iBACpBV,EAAMW,KAAIC,IAAc,IAAb,KAAEC,GAAMD,EAClB,MAAM,KAAEE,GAASD,EAAKE,YAEtB,OAAOX,EAAAA,cAACY,EAAAA,GAAQ,CAACC,IAAKH,EAAMI,KAAML,GAAQ,OAK3C,C","sources":["webpack://cybersocyork.github.io/./src/templates/tags.tsx"],"sourcesContent":["import React from \"react\";\n\nimport { graphql } from \"gatsby\";\n\nimport { TextLink, Layout, PostLink } from \"~/components\";\n\ntype TagTemplateProps = {\n  pageContext: {\n    tag: string;\n  };\n  data: {\n    allMarkdownRemark: {\n      totalCount: number;\n      edges: {\n        node: {\n          frontmatter: {\n            title: string;\n            path: string;\n            author: string;\n            date: string;\n          };\n          excerpt: string;\n          fields: {\n            slug: string;\n          };\n        };\n      }[];\n    };\n  };\n};\n\nconst TagTemplate = ({ pageContext, data }: TagTemplateProps) => {\n  const { tag } = pageContext;\n  const { edges, totalCount } = data.allMarkdownRemark;\n  const tagHeader = `${totalCount} post${totalCount === 1 ? \"\" : \"s\"} tagged with \"${tag}\"`;\n\n  return (\n    <Layout title={`Posts tagged \"${tag}\"`}>\n      <div className=\"container\">\n        <div className=\"row my-5\" id=\"tags\">\n          <div className=\"col\">\n            <h1>{tagHeader}</h1>\n            <TextLink to=\"/tags\">View all tags</TextLink>\n            {edges.map(({ node }) => {\n              const { path } = node.frontmatter;\n\n              return <PostLink key={path} post={node} />;\n            })}\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default TagTemplate;\n\nexport const pageQuery = graphql`\n  query ($tag: String) {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          excerpt(pruneLength: 350)\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            path\n            title\n            author\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["_ref","pageContext","data","tag","edges","totalCount","allMarkdownRemark","tagHeader","React","Layout","title","className","id","TextLink","to","map","_ref2","node","path","frontmatter","PostLink","key","post"],"sourceRoot":""}